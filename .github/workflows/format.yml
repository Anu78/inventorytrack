name: Format and Create Release on Push

on:
  push:
    branches:
      - main

jobs:
  format_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x' # Use a compatible Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || true)
          if [[ -z "$LATEST_TAG" ]]; then
            LATEST_TAG="v0.0.0"
          fi
          echo "Latest tag is $LATEST_TAG"
          echo ::set-output name=latest_tag::$LATEST_TAG
        shell: bash

      - name: Bump version and Push tag
        id: bump_version
        run: |
          VERSION=$(echo ${{ steps.get_latest_tag.outputs.latest_tag }} | sed -e "s/^v//" -e "s/\([^0-9]\)/.\1/g")
          VERSION=$(echo $VERSION | awk -F. '{ printf("%d.%d.%d", $1, $2, $3 + 1)}')
          NEW_TAG="v$VERSION"
          echo "Bumping to new tag $NEW_TAG"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo ::set-output name=new_tag::$NEW_TAG
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          release_name: Release ${{ steps.bump_version.outputs.new_tag }}
          body: Auto-generated release for ${{ steps.bump_version.outputs.new_tag }}
          draft: false
          prerelease: false
